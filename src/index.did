service: {
    http_request: (
        record {
            url: text;
            method: text;
            body: vec nat8;
            headers: vec record { text; text };
            certificate_version: opt nat16;
        }
    ) -> (
        record {
            body: vec nat8;
            headers: vec record { text; text };
            upgrade: opt bool;
            streaming_strategy: opt variant {
                Callback: record {
                    token: vec nat8;
                    callback: func (vec nat8) -> (
                        opt record {
                            token: opt vec nat8;
                            body: vec nat8;
                        }
                    ) query;
                }
            };
            status_code: nat16;
        }
    ) query;

    http_request_update: (
        record {
            url: text;
            method: text;
            body: vec nat8;
            headers: vec record { text; text };
        }
    ) -> (
        record {
            body: vec nat8;
            headers: vec record { text; text };
            upgrade: opt bool;
            streaming_strategy: opt variant {
                Callback: record {
                    token: vec nat8;
                    callback: func (vec nat8) -> (
                        opt record {
                            token: opt vec nat8;
                            body: vec nat8;
                        }
                    ) query;
                }
            };
            status_code: nat16;
        }
    );

    create_admin: (
        record {
            name: text;
            email: text;
            password: text;
        }
    ) -> (record {
        id: text;
        name: text;
        email: text;
    });

    create_volunteer: (
        record {
            name: text;
            email: text;
            contact: text;
            skills: vec text;
        }
    ) -> (record {
        id: text;
        name: text;
        email: text;
        contact: text;
        skills: vec text;
        createdAt: int;
    });

    get_volunteer: (text) -> (opt record {
        id: text;
        name: text;
        email: text;
        contact: text;
        skills: vec text;
        createdAt: int;
    });

    get_volunteers_pagination: (record {
        start: int;
        end: int;
    }) -> (vec record {
        id: text;
        name: text;
        email: text;
        contact: text;
        skills: vec text;
        createdAt: int;
    });

    get_volunteers: () -> (vec record {
        id: text;
        name: text;
        email: text;
        contact: text;
        skills: vec text;
        createdAt: int;
    });

    create_event: (
        record {
            adminId: text;
            title: text;
            description: text;
            dateTime: int;
            location: text;
            organizerId: text;
        }
    ) -> (record {
        id: text;
        adminId: text;
        title: text;
        description: text;
        dateTime: int;
        location: text;
        organizerId: text;
        createdAt: int;
    });

    get_events: () -> (vec record {
        id: text;
        adminId: text;
        title: text;
        description: text;
        dateTime: int;
        location: text;
        organizerId: text;
        createdAt: int;
    });

    create_registration: (
        record {
            eventId: text;
            volunteerId: text;
            status: text;
        }
    ) -> (record {
        id: text;
        eventId: text;
        volunteerId: text;
        status: text;
        registeredAt: int;
        attendedAt: opt int;
    });

    get_registrations: () -> (vec record {
        id: text;
        eventId: text;
        volunteerId: text;
        status: text;
        registeredAt: int;
        attendedAt: opt int;
    });

    create_feedback: (
        record {
            volunteerId: text;
            eventId: text;
            feedback: text;
            rating: int;
        }
    ) -> (record {
        id: text;
        volunteerId: text;
        eventId: text;
        feedback: text;
        rating: int;
        createdAt: int;
    });

    get_feedbacks: () -> (vec record {
        id: text;
        volunteerId: text;
        eventId: text;
        feedback: text;
        rating: int;
        createdAt: int;
    });
}